name: 'o2switch Whitelisting'
description: 'Add the runner IP in your o2switch whitelist for later remote access.'
branding:
  icon: 'server'
  color: 'white'

inputs:
  otp_secret:
    description: 'The OTP secret for your o2switch account.'
    required: false
    default: null
  o2switch_username:
    description: 'The o2switch username.'
    required: true
  o2switch_host:
    description: 'The o2switch host.'
    required: true
  o2switch_api_token:
    description: 'The o2switch API token for authentication.'
    required: true
  ip_to_keep:
    description: 'The IP to keep in the whitelist.'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Getting runner public IP
      id: ip
      uses: haythem/public-ip@v1.3
    
    - name: Installing tools for 2FA
      uses: tecolicom/actions-use-apt-tools@v1
      if: ${{ inputs.otp_secret != null }}
      with:
        tools: oathtool gnupg2
        method: timestamp

    - name: Whitelist IP on hosting & delete github old ones using 2FA
      shell: bash
      if: ${{ inputs.otp_secret != null }}
      run: |
        OTP=$(oathtool -b --totp '${{ inputs.otp_secret }}')
        echo "Remove all whitelisted IPs..."
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' -H "X-CPANEL-OTP: ${{ inputs.otp_secret }}" \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/remove_all'

        echo "Whitelisting the runner IP"
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' -H "X-CPANEL-OTP: ${{ inputs.otp_secret }}" \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/add?address=${{ steps.ip.outputs.ipv4 }}&port=22'

        echo "Checking if the IP is whitelisted..."
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' -H "X-CPANEL-OTP: ${{ inputs.otp_secret }}" \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/list' | grep ${{ steps.ip.outputs.ipv4 }}

        echo "Whitelisting the keeping IP if provided..."
        if [ -n "${{ inputs.ip_to_keep }}" ]; then
          curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' -H "X-CPANEL-OTP: ${{ inputs.otp_secret }}" \
            'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/add?address=${{ inputs.ip_to_keep }}&port=22'
        fi
    
    - name: Whitelist IP on hosting & delete github old ones without 2FA
      shell: bash
      if: ${{ inputs.otp_secret == null }}
      run: |
        echo "Remove all whitelisted IPs..."
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/remove_all'

        echo "Whitelisting the runner IP"
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/add?address=${{ steps.ip.outputs.ipv4 }}&port=22'

        echo "Checking if the IP is whitelisted..."
        curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' \
          'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/list' | grep ${{ steps.ip.outputs.ipv4 }}

        echo "Whitelisting the keeping IP if provided..."
        if [ -n "${{ inputs.ip_to_keep }}" ]; then
          curl -sm 45 -H'Authorization: cpanel ${{ inputs.o2switch_username }}:${{ inputs.o2switch_api_token }}' \
            'https://${{ inputs.o2switch_host }}:2083/execute/SshWhitelist/add?address=${{ inputs.ip_to_keep }}&port=22'
        fi
